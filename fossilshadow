#!/usr/bin/env python
import os
import sqlite3
import sys

def print_usage():
	print '''	Usage: fossilshadow [repo] [bare-repo-name]
The repository shadow is created with "fossil init". Parameters compatible with
"fossil init" can be specified by prepending them to the repository path in
[repo].'''

def get_first_commit_date(repo):
	return '1970-01-01 00:00:00'

def get_project_code(repo):
	db = sqlite3.connect(repo)
	cursor = db.cursor()
	cursor.execute("""
		SELECT value FROM config
		WHERE name = 'project-code';
		""")
	project_tuple = cursor.fetchone()
	project_code = project_tuple[0]
	print 'project_code:', project_code
	db.close()
	return project_code

def set_project_code(repo, project_code):
	db = sqlite3.connect(repo)
	cursor = db.cursor()
	cursor.execute("""
		UPDATE config SET value = ?
		WHERE name = 'project-code';
		""", (project_code,))
	db.commit()
	db.close()

def main(argv):
	if len(argv) < 3:
		print_usage()
		sys.exit(1)

	repo_path = argv[1]
	shadow_repo_path = argv[2]

	# Get datetime of first commit in the reference repository (todo)
	first_commit_date = get_first_commit_date(repo_path)

	project_code = get_project_code(repo_path)

	cmd = 'fossil init --date-override "' + first_commit_date + '" "' + shadow_repo_path + '"'
	print "cmd: ", cmd
	return_value = os.system(cmd)
	if return_value != 0:
		print 'Error: the command'
		print '\t', cmd
		print 'returned with exit code', return_value
		return return_value

	set_project_code(shadow_repo_path, project_code)

if __name__ == '__main__':
	main(sys.argv)
